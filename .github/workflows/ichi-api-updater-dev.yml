name: Ichi Token Updater (Dev)

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  dev:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Build and deploy
    runs-on: ubuntu-latest
    env:
        function-name: ichi-api-updater
        function-arn: arn:aws:lambda:us-east-1:161115208194:function:ichi-api-updater-dev
        env-name: dev
        dist-directory: ./dist

    steps:

      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: npm install and build
        run: |
          npm i
          npm run build

      - name: zip results
        run: |
          zip -r ../${{env.function-name}}.zip *
        working-directory: ${{env.dist-directory}}

      - name: list dir contents
        run: |
          ls -lah

      - name: Deploy function ${{env.function-name}}-${{env.env-name}}
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          function_name: ${{env.function-name}}-${{env.env-name}}
          zip_file: ${{env.function-name}}.zip

      - name: Publish Artifacts
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{env.function-name}}
          path: ${{env.function-name}}.zip
  stage:
    needs: dev
    environment:
     name: stage
    #  url: https://jobsandenvironments.azurewebsites.net/
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Locally this works fine, but in Github actions it flat out doesn't want to work, always returns a length of 0
      # - name: Test lambda
      #   run: |
      #     aws lambda invoke --function-name "${{env.function-arn}}" lambda.out --log-type Tail --query 'LogResult' | sed -e 's/"//g' | base64 -d | grep "Successfully updated table" | wc -c | tr -d ' ' > function.out
      #     response_length=$(cat function.out)
      #     echo $response_length
      #     echo "lambda-response=$response_length" >> $GITHUB_ENV

      # - name: Echo
      #   run: |
      #     echo "${{ env.lambda-response }}"
